{"ast":null,"code":"var _jsxFileName = \"/Users/oleggelfand/Documents/oleg-all/React-Portfolio/react-porfolio/src/Projects.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport drilldown from 'highcharts/modules/drilldown';\nimport './App.css';\nimport About from './About';\nimport { Link } from \"react-router-dom\";\nimport NavTop from \"./NavTop\";\ndrilldown(Highcharts);\n\nfunction Projects() {\n  // const [projects, setProjects] = useState([]);\n  // useEffect(() => {\n  //   const makeAPICall = async () => {\n  //     // const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  //     const projectURL = \"https://docs.google.com/spreadsheets/d/1ZgSrmkNKNaoR9jbnrp_he1qtHLmGJsq191HpCkT86sM/edit?usp=sharing\";\n  //     const resp = await fetch(`${projectURL}`);\n  //     console.log(\"useEffect - resp\", resp);\n  //     let json = await resp.json();\n  //     setProjects(json);\n  //   };console.log('setprojects',setProjects)\n  //   makeAPICall();\n  // }, []);\n  let url = 'https://docs.google.com/spreadsheets/d/1ZgSrmkNKNaoR9jbnrp_he1qtHLmGJsq191HpCkT86sM/edit?usp=sharing';\n  let id = '1ZgSrmkNKNaoR9jbnrp_he1qtHLmGJsq191HpCkT86sM';\n  let source = `https://spreadsheets.google.com/feeds/list/1ZgSrmkNKNaoR9jbnrp_he1qtHLmGJsq191HpCkT86sM/od6/public/values?alt=json`; // let source = `https://spreadsheets.google.com/feeds/list/${id}/od6/public/values?alt=json`\n\n  fetch(source).then(response => response.json()) // this parses the data from string back into an object\n  .then(data => {\n    console.log('data', data);\n    let projects = data.feed.entry.map(project => {\n      return {\n        title: project.gsx$title.$t,\n        image: project.gsx$image.$t,\n        description: project.gsx$description.$t,\n        url: project.gsx$url.$t\n      };\n    });\n    Projects(projects);\n  });\n  const $section = 'section';\n  console.log($section);\n\n  function Projects(projects) {\n    //i console logged by naming my object 'app-projects', and used parameter projects\n    console.log('app-projects', projects); //I then ran the function projects stating that for each item that i returned within the projects function, i wanted to create an article and image tag\n\n    projects.forEach(iconData => {\n      let picture = `<picture>\n                        <h4>${iconData.title}</h4>\n                        <img src=${iconData.image}>\n                      </picture>` //i then appended the article to the section and it showed up on my browser!\n      (section).append(picture);\n    });\n  }\n\n  ;\n  const options = {\n    chart: {\n      type: 'pie',\n      backgroundColor: '#000'\n    },\n    title: {\n      text: 'My Projects'\n    },\n    xAxis: {\n      type: 'category'\n    },\n    legend: {\n      enabled: true\n    },\n    series: [{\n      name: 'Software',\n      colorByPoint: true,\n      data: [{\n        name: 'React',\n        y: 1,\n        drilldown: 'react'\n      }, {\n        name: 'VanillaJs',\n        y: 1,\n        drilldown: 'vanillajs'\n      }, {\n        name: 'Python',\n        y: 1,\n        drilldown: 'python'\n      }]\n    }],\n    drilldown: {\n      series: [{\n        id: 'react',\n        data: [['Portfolio', 1], ['TeslaApp', 1]]\n      }, {\n        id: 'python',\n        data: [['not sure yet', 4], ['ill add something soon', 2], ['something will be here soon', 1]]\n      }, {\n        id: 'vanillajs',\n        data: [['', 4], ['to do list', 2], ['Ford', 1], ['Chevy', 1]]\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavTop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/oleggelfand/Documents/oleg-all/React-Portfolio/react-porfolio/src/Projects.js"],"names":["React","useEffect","useState","Highcharts","HighchartsReact","drilldown","About","Link","NavTop","Projects","url","id","source","fetch","then","response","json","data","console","log","projects","feed","entry","map","project","title","gsx$title","$t","image","gsx$image","description","gsx$description","gsx$url","$section","forEach","iconData","picture","section","append","options","chart","type","backgroundColor","text","xAxis","legend","enabled","series","name","colorByPoint","y"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport drilldown from 'highcharts/modules/drilldown';\nimport './App.css';\nimport About from './About'\nimport { Link } from \"react-router-dom\";\nimport NavTop from \"./NavTop\";\n\ndrilldown(Highcharts);\n\nfunction Projects() {\n\n  // const [projects, setProjects] = useState([]);\n\n\n  // useEffect(() => {\n  //   const makeAPICall = async () => {\n  //     // const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  //     const projectURL = \"https://docs.google.com/spreadsheets/d/1ZgSrmkNKNaoR9jbnrp_he1qtHLmGJsq191HpCkT86sM/edit?usp=sharing\";\n  //     const resp = await fetch(`${projectURL}`);\n  //     console.log(\"useEffect - resp\", resp);\n  //     let json = await resp.json();\n  //     setProjects(json);\n  //   };console.log('setprojects',setProjects)\n  //   makeAPICall();\n  // }, []);\n  let url = 'https://docs.google.com/spreadsheets/d/1ZgSrmkNKNaoR9jbnrp_he1qtHLmGJsq191HpCkT86sM/edit?usp=sharing'\n  let id = '1ZgSrmkNKNaoR9jbnrp_he1qtHLmGJsq191HpCkT86sM'\n  \n  let source = `https://spreadsheets.google.com/feeds/list/1ZgSrmkNKNaoR9jbnrp_he1qtHLmGJsq191HpCkT86sM/od6/public/values?alt=json`\n  // let source = `https://spreadsheets.google.com/feeds/list/${id}/od6/public/values?alt=json`\n \n  fetch(source)\n    .then( response => response.json() ) // this parses the data from string back into an object\n    .then( data =>  {\n        console.log('data', data)\n        let projects = data.feed.entry.map( project => {\n          return {\n            title: project.gsx$title.$t,\n            image: project.gsx$image.$t,\n            description: project.gsx$description.$t,\n            url: project.gsx$url.$t\n          }\n        })\n        Projects(projects)\n      }) \n\n  const $section= ('section');\n  console.log($section)\n  function Projects (projects){\n    //i console logged by naming my object 'app-projects', and used parameter projects\n    console.log('app-projects', projects) \n      //I then ran the function projects stating that for each item that i returned within the projects function, i wanted to create an article and image tag\n    projects.forEach( iconData => {\n      let picture= `<picture>\n                        <h4>${iconData.title}</h4>\n                        <img src=${iconData.image}>\n                      </picture>`\n                      //i then appended the article to the section and it showed up on my browser!\n      (section).append(picture);\n    })\n  };\n \n  const options = {\n    chart: \n    {\n      type:'pie',\n      backgroundColor: '#000',\n\n    },\n   \n      title: {\n        text: 'My Projects'\n      },\n      xAxis: {\n        type: 'category'\n      },\n\n      legend: {\n        enabled: true,\n      },\n    series: [\n      {\n        name:'Software',\n        colorByPoint:true,\n        data:[\n          {\n            name: 'React',\n            y:1,\n            drilldown:'react',\n          },\n          {\n            name: 'VanillaJs',\n            y:1,\n            drilldown:'vanillajs',\n          },{\n            name: 'Python',\n            y:1,\n            drilldown:'python',\n          },\n\n        ]\n      }\n    ],\n    drilldown:{\n      series:[\n        {\n          id:'react',\n          data: [['Portfolio',1],['TeslaApp',1]]\n        }, {\n          id:'python',\n          data: [['not sure yet',4],['ill add something soon',2],['something will be here soon',1] ]\n        }, {\n          id:'vanillajs',\n          data: [['',4],['to do list',2],['Ford',1],['Chevy',1] ]\n        },\n\n      ]\n    }\n   \n    \n  };\n  return (\n  \n    \n    <div>\n     {/* <h1>{projects}</h1>  */}\n     <NavTop />\n     \n      <div className=\"project-container\">\n        <HighchartsReact highcharts={Highcharts} options={options}/>\n      </div>\n \n      \n    </div>\n  );\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}